
// === API KEYS ===
const OPENAI_API_KEY = "YOUR_OPENAI_API_KEY";
const BITLY_TOKEN = "YOUR_BITLY_TOKEN";

// === ON OPEN MENU ===
function onOpen() {
  SpreadsheetApp.getUi().createMenu("Social Media Tools")
    .addItem("🎯 Δημιουργία Drafts", "generateMultiTabDrafts")
    .addItem("🔗 Shorten Links", "generateBitlyLinks")
    .addItem("📊 Clicks Update", "updateBitlyClicks")
    .addItem("📄 Create PDF", "generatePDFsFromDrafts")
    .addToUi();
}

// === 1. GPT RESPONSE ===
function getChatGPTResponse(prompt) {
  const url = "https://api.openai.com/v1/chat/completions";
  const payload = {
    model: "gpt-3.5-turbo",
    messages: [{ role: "user", content: prompt }],
    temperature: 0.7
  };

  const options = {
    method: "post",
    contentType: "application/json",
    headers: { Authorization: "Bearer " + OPENAI_API_KEY },
    payload: JSON.stringify(payload),
    muteHttpExceptions: true
  };

  try {
    const response = UrlFetchApp.fetch(url, options);
    const json = JSON.parse(response.getContentText());
    return json.choices[0].message.content.trim();
  } catch (e) {
    Logger.log("Σφάλμα από OpenAI: " + e);
    return null;
  }
}

// === 2. CREATE DRAFTS ===
function generateMultiTabDrafts() {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  const centralSheet = ss.getSheetByName("Κεντρικό");
  const data = centralSheet.getDataRange().getValues();
  const headers = data[0];
  const platforms = ["TikTok", "Instagram", "Facebook", "Pinterest", "YouTube"];

  const langCol = headers.indexOf("Γλώσσα");
  const topicCol = headers.indexOf("Θέμα");

  if (langCol === -1 || topicCol === -1) return;

  for (let i = 1; i < data.length; i++) {
    const topic = data[i][topicCol];
    const lang = (data[i][langCol] || "BOTH").toUpperCase();
    if (!topic) continue;

    for (let platform of platforms) {
      const sheet = ss.getSheetByName(platform) || ss.insertSheet(platform);
      const lastRow = sheet.getLastRow() + 1;
      sheet.getRange(lastRow, 1).setValue(topic);

      for (let l of ["EL", "EN"]) {
        if (lang !== "BOTH" && lang !== l) continue;
        const baseCol = l === "EL" ? 2 : 6;

        const prompt = `Γράψε περιεχόμενο για το ${platform} με θέμα "${topic}" στα ${l === "EL" ? "ελληνικά" : "αγγλικά"}.
Hook: ...
Κείμενο: ...
Hashtags: ...
CTA: ...`;

        const result = getChatGPTResponse(prompt);
        if (!result) {
          for (let j = 0; j < 4; j++) sheet.getRange(lastRow, baseCol + j).setValue("❌");
          continue;
        }

        const lines = result.split("\n");
        let hook = "", text = "", hashtags = "", cta = "";
        for (let line of lines) {
          if (line.startsWith("Hook:")) hook = line.replace("Hook:", "").trim();
          if (line.startsWith("Κείμενο:") || line.startsWith("Text:")) text = line.replace(/(Κείμενο:|Text:)/, "").trim();
          if (line.startsWith("Hashtags:")) hashtags = line.replace("Hashtags:", "").trim();
          if (line.startsWith("CTA:")) cta = line.replace("CTA:", "").trim();
        }

        sheet.getRange(lastRow, baseCol).setValue(hook || "❌");
        sheet.getRange(lastRow, baseCol + 1).setValue(text || "❌");
        sheet.getRange(lastRow, baseCol + 2).setValue(hashtags || "❌");
        sheet.getRange(lastRow, baseCol + 3).setValue(cta || "❌");
      }
    }
  }
}

// === 3. CREATE BITLY LINKS ===
function generateBitlyLinks() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Κεντρικό");
  const data = sheet.getDataRange().getValues();
  const headers = data[0];
  const urlCol = headers.indexOf("Original URL");
  const bitlyCol = headers.indexOf("Bitly Link");

  for (let i = 1; i < data.length; i++) {
    const longUrl = data[i][urlCol];
    if (longUrl && !data[i][bitlyCol]) {
      const bitlink = createBitlyLink(longUrl);
      if (bitlink) sheet.getRange(i + 1, bitlyCol + 1).setValue(bitlink);
    }
  }
}

function createBitlyLink(longUrl) {
  const url = "https://api-ssl.bitly.com/v4/shorten";
  const payload = JSON.stringify({ long_url: longUrl });

  const options = {
    method: "post",
    headers: {
      Authorization: "Bearer " + BITLY_TOKEN,
      "Content-Type": "application/json"
    },
    payload: payload
  };

  try {
    const response = UrlFetchApp.fetch(url, options);
    const json = JSON.parse(response.getContentText());
    return json.link || "";
  } catch (e) {
    Logger.log("Bitly Error: " + e);
    return null;
  }
}

// === 4. CLICK TRACKER ===
function updateBitlyClicks() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Κεντρικό");
  const data = sheet.getDataRange().getValues();
  const headers = data[0];
  const bitlyCol = headers.indexOf("Bitly Link");
  const clicksCol = headers.indexOf("Clicks");

  for (let i = 1; i < data.length; i++) {
    const url = data[i][bitlyCol];
    if (!url) continue;

    const id = url.split("/").pop();
    const endpoint = `https://api-ssl.bitly.com/v4/bitlinks/${id}/clicks/summary`;

    const options = {
      method: "get",
      headers: { Authorization: "Bearer " + BITLY_TOKEN },
      muteHttpExceptions: true
    };

    try {
      const res = UrlFetchApp.fetch(endpoint, options);
      const json = JSON.parse(res.getContentText());
      const clicks = json.total_clicks || 0;
      sheet.getRange(i + 1, clicksCol + 1).setValue(clicks);
    } catch (e) {
      Logger.log("Click update error: " + e);
    }
  }
}

// === 5. PDF FROM DRAFTS ===
function generatePDFsFromDrafts() {
  const folder = DriveApp.createFolder("Social_Media_Drafts_" + new Date().toISOString());
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  const centralSheet = ss.getSheetByName("Κεντρικό");
  const data = centralSheet.getDataRange().getValues();
  const headers = data[0];
  const topicCol = headers.indexOf("Θέμα");
  const langCol = headers.indexOf("Γλώσσα");
  const linkCol = headers.indexOf("PDF Link");

  for (let i = 1; i < data.length; i++) {
    const topic = data[i][topicCol];
    const lang = (data[i][langCol] || "BOTH").toUpperCase();
    if (!topic) continue;

    const doc = DocumentApp.create(topic);
    const body = doc.getBody();
    body.appendParagraph("📌 Θέμα: " + topic);

    const platforms = ["TikTok", "Instagram", "Facebook", "Pinterest", "YouTube"];
    platforms.forEach(p => {
      const sheet = ss.getSheetByName(p);
      if (!sheet) return;
      const drafts = sheet.getDataRange().getValues();
      for (let row of drafts) {
        if (row[0] === topic) {
          body.appendParagraph(`
📱 ${p}`);
          const offset = lang === "EN" ? 5 : 1;
          body.appendParagraph("Hook: " + row[offset]);
          body.appendParagraph("Text: " + row[offset + 1]);
          body.appendParagraph("Hashtags: " + row[offset + 2]);
          body.appendParagraph("CTA: " + row[offset + 3]);
        }
      }
    });

    doc.saveAndClose();
    const pdf = DriveApp.getFileById(doc.getId()).getAs("application/pdf");
    const pdfFile = folder.createFile(pdf);
    const url = pdfFile.getUrl();
    centralSheet.getRange(i + 1, linkCol + 1).setValue(url);
  }
}
